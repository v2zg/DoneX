import 'package:hive/hive.dart';

part 'task_model.g.dart';

@HiveType(typeId: 0)
class TaskModel extends HiveObject {
  @HiveField(0)
  final String title;

  @HiveField(1)
  final List<String> subTasks;

  @HiveField(2)
  final String time;

  @HiveField(3)
  bool isCompleted;

  @HiveField(4)
  int position;

  @HiveField(5)
  List<bool>? subTasksCompleted; // âœ… ÙŠØ®Ø²Ù† Ø­Ø§Ù„Ø© ÙƒÙ„ subtask (ØµØ­/Ù„Ø§)

  @HiveField(6)
  final DateTime date; // ðŸ“… ÙŠÙ…Ø«Ù„ ÙŠÙˆÙ… Ø§Ù„Ù…Ù‡Ù…Ø©

  TaskModel({
    required this.title,
    required this.subTasks,
    required this.time,
    required this.date,
    this.isCompleted = false,
    this.position = 0,
    this.subTasksCompleted, // Ù…Ù…ÙƒÙ† ØªÙƒÙˆÙ† null
  });

  /// âœ… Ø¯Ø§Ù„Ø© Ù„ØªØ£ÙƒÙŠØ¯ ØªØ²Ø§Ù…Ù† Ø¹Ø¯Ø¯ Ø§Ù„Ø­Ø§Ù„Ø§Øª Ù…Ø¹ Ø¹Ø¯Ø¯ Ø§Ù„Ù…Ù‡Ø§Ù…
  void syncSubTasks() {
    final updated = List<bool>.filled(subTasks.length, false);
    for (int i = 0;
        i < (subTasksCompleted?.length ?? 0) && i < subTasks.length;
        i++) {
      updated[i] = subTasksCompleted![i];
    }
    subTasksCompleted = updated;
  }
}
